---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'projects'>['data'];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  status,
  emoji,
  url,
} = Astro.props;

const colorByStatus = {
  Done: 'bg-emerald-100 border-emerald-300 text-emerald-800',
  WIP: 'bg-orange-100 border-orange-300 text-orange-800',
  'Not Started': 'bg-neutral-100 border-neutral-300 text-neutral-800',
};
---

<html lang='en'>
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body>
    <Header />

    <main class='flex flex-col text-[1rem]'>
      <article>
        <div class='mb-4 relative'>
          {
            heroImage && (
              <>
                <img
                  class='rounded-lg shadow-xl'
                  width={1020}
                  height={510}
                  src={heroImage}
                  alt=''
                />
                <span
                  class={
                    'absolute top-4 right-4 py-1 px-2 rounded border ' +
                    colorByStatus[status]
                  }
                >
                  {status}
                </span>
              </>
            )
          }
        </div>
        <div class='flex flex-col gap-4'>
          <div class='flex flex-col'>
            <section class='flex items-center justify-between'>
              <h1 class='font-bold text-[1.5rem]'>{emoji + ' ' + title}</h1>
              <div class='date'>
                <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class='last-updated-on'>
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
            </section>
            {
              url && (
                <a href={url} target={'__blank'} class='underline'>
                  View on GitHub â†’
                </a>
              )
            }
          </div>
          <hr />
          <div class='md'>
            <slot />
          </div>
        </div>
      </article>
    </main>
    <style is:inline>
      .md {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      .md h1:not(.mdx) {
        font-size: 1.5rem;
        font-weight: bold;
      }

      .md h2:not(.mdx) {
        font-size: 1.4rem;
      }
      .md h3:not(.mdx) {
        font-size: 1.25rem;
      }
      .md ol:not(.mdx) {
        list-style: decimal;
        padding-left: 1rem;
      }
      .md ul:not(.mdx) {
        list-style: disc;
        padding-left: 1rem;
      }

      .md a:not(.mdx) {
        color: #3182ce;
        text-decoration: underline;
        transition: color 0.15s ease;
      }

      .md a:hover:not(.mdx) {
        color: #2c5282;
      }
    </style>
  </body>
</html>
